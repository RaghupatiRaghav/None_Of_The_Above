This text file provides metadata and initial data cleaning steps. In the inital part of the project, the preprocessing was done manually on MS Excel but now all steps being executed have been automated in Python3. Codes for this preprocessing can be found in Codes folder. 

In first part of the project, the following cleanup was carried out:
The data has been extracted from Trivedi Centre for Political Data Lok Dhaba(2019) [http://lokdhaba.ashoka.edu.in]. It contains details of all Lok Sabha and Vidhan Sabhas elections from 2008-2019.
-For variable description of the dataset, see LokDhabaCodebook.pdf. For variable description of the variables used in analysis, see variables_description.csv.
-I take data from 2008 onwards due to the delimitation exercise carried by the Election Commission of India. 
-It must be noted that the elections in Tripura, Meghalaya and Nagaland were conducted before the delimitation exercise and are therefore removed from extracted dataset
-Further, I remove all re-elections/by-elections from the extracted dataset due to discrepancies of data for these elections. This is done by setting the variable Poll_No=0 and removing rows with Poll_No=1 or Poll_No=2. 
-I form a key to identify each constituency in elections to the Lok and Vidhan Sabhas respectively. This key is given by the variable 'uni_const_code' which is short for unique_constituency_code. 
-The syntax of the key is 'gen/state elections|state census code|constituency number'. Here, general elections is represented by 0 and state elections by 1. Further. State Census Code is unique for each state. See census_codes.csv for reference. Constituency Number is the 'Constituency_No' variable in the dataset. Now, constituency no 1 in general elections in Bihar will be coded as 0|10|1. Similarly, constituency no 9 in J&K state elections will be coded 1|1|9. Needless to say these uniquely coded constituencies will appear multiple times due to multiple elections in that constituency. For instance, 0|10|1 appears in 3 years - 2009, 2014 and 2019 corresponding to the different number of general elections in the constituency. 
-'pre_post_nota_ind' variable is an variable to indicate whether the election is pre or post NOTA. NOTA was introduced on Sept 27, 2013. The state elections in Meghalaya, Nagaland, Tripura and Karnataka were held in 2013 before NOTA was introduced whereas the state elections of Delhi, Chhattisgarh, Madhya Pradesh, Mizoram and Rajasthan were held after the introduction of NOTA and had the NOTA option in both EVMs and ballot papers. These nuances have been taken into account to mark election as pre/post nota. Pre nota election is represented by 0 whereas a post nota election is represented by 1. 
-The data has then been sorted in increasing order of values of 'Year' and 'Position' in that order. If, for instance, there are 16 candidates in 2009 election in 0|10|1 constituency, then those candidates will first be arranged in increasing order of their postions. Then, the 15 candidates in 2014 will be arranged in increasing order of their positions. This process will be repeated for 2019 election in 0|10|1. Once we are done with this constituency, the sorting will be carried out similarly for the next constituency in line and this process goes on till the entire dataset is sorted. I use Data -> Sort command in Excel to perform the task.
-Data with only one candidate contesting and winning the election have been removed due to data discrepancies. All these cases were from Arunachal Pradesh and one from Nagaland.
-The output of this exercise is cleanest_data.csv

In addition to the steps above, the following additions were made in the second half of the project:
-Some variables were removed from the initial data from Lokdhaba: 
1. Election_Type: This variable is redundant with the gen/state boolean generated
2. DelimID: (Quality Check step): all rows for our analysis have DelimID = 4 indicating that we are dealing with data post 2008 delimitation
-The output of this exercise is cleanest_data.csv